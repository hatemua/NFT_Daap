{"ast":null,"code":"import _classCallCheck from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isWalletConnectSession, getLocal, setLocal, removeLocal } from \"@walletconnect/utils\";\nvar SessionStorage = /*#__PURE__*/function () {\n  function SessionStorage() {\n    var storageId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"walletconnect\";\n    _classCallCheck(this, SessionStorage);\n    this.storageId = storageId;\n  }\n  _createClass(SessionStorage, [{\n    key: \"getSession\",\n    value: function getSession() {\n      var session = null;\n      var json = getLocal(this.storageId);\n      if (json && isWalletConnectSession(json)) {\n        session = json;\n      }\n      return session;\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(session) {\n      setLocal(this.storageId, session);\n      return session;\n    }\n  }, {\n    key: \"removeSession\",\n    value: function removeSession() {\n      removeLocal(this.storageId);\n    }\n  }]);\n  return SessionStorage;\n}();\nexport default SessionStorage;","map":{"version":3,"sources":["../../src/storage.ts"],"names":[],"mappings":";;AACA,SAAS,sBAAsB,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,QAAQ,sBAAsB;AAAC,IAEzF,cAAc;EAClB,SAAA,eAAA,EAAsD;IAAA,IAAnC,SAAA,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAoB,eAAe;IAAA,eAAA,OAAA,cAAA;IAAnC,IAAA,CAAA,SAAS,GAAT,SAAS;EAA6B;EAAC,YAAA,CAAA,cAAA;IAAA,GAAA;IAAA,KAAA,EAEnD,SAAA,WAAA,EAAU;MACf,IAAI,OAAO,GAAiC,IAAI;MAChD,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;MACrC,IAAI,IAAI,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;QACxC,OAAO,GAAG,IAAI;MACf;MACD,OAAO,OAAO;IAChB;EAAC;IAAA,GAAA;IAAA,KAAA,EAEM,SAAA,WAAW,OAA8B,EAAA;MAC9C,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;MACjC,OAAO,OAAO;IAChB;EAAC;IAAA,GAAA;IAAA,KAAA,EAEM,SAAA,cAAA,EAAa;MAClB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;IAC7B;EAAC;EAAA,OAAA,cAAA;AAAA;AAGH,eAAe,cAAc","sourceRoot":"","sourcesContent":["import { isWalletConnectSession, getLocal, setLocal, removeLocal } from \"@walletconnect/utils\";\nclass SessionStorage {\n    constructor(storageId = \"walletconnect\") {\n        this.storageId = storageId;\n    }\n    getSession() {\n        let session = null;\n        const json = getLocal(this.storageId);\n        if (json && isWalletConnectSession(json)) {\n            session = json;\n        }\n        return session;\n    }\n    setSession(session) {\n        setLocal(this.storageId, session);\n        return session;\n    }\n    removeSession() {\n        removeLocal(this.storageId);\n    }\n}\nexport default SessionStorage;\n//# sourceMappingURL=storage.js.map"]},"metadata":{},"sourceType":"module"}