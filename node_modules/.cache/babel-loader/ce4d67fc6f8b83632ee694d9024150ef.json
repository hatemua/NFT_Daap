{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/hatem/Downloads/New folder (4)/HegemonyDaap/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport var AnonymousCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(AnonymousCoder, _Coder);\n  var _super = _createSuper(AnonymousCoder);\n  function AnonymousCoder(coder) {\n    var _this;\n    _classCallCheck(this, AnonymousCoder);\n    _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic);\n    _this.coder = coder;\n    return _this;\n  }\n  _createClass(AnonymousCoder, [{\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return this.coder.encode(writer, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return this.coder.decode(reader);\n    }\n  }]);\n  return AnonymousCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/anonymous.ts"],"names":[],"mappings":"AAAA,YAAY;;AAAC,OAAA,eAAA;AAAA,OAAA,YAAA;AAAA,OAAA,SAAA;AAAA,OAAA,YAAA;AAEb,SAAS,KAAK,QAAwB,kBAAkB;AAExD;AACA,WAAa,cAAe,0BAAA,MAAA;EAAA,SAAA,CAAA,cAAA,EAAA,MAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,cAAA;EAGxB,SAAA,eAAY,KAAY,EAAA;IAAA,IAAA,KAAA;IAAA,eAAA,OAAA,cAAA;IACpB,KAAA,GAAA,MAAA,CAAA,IAAA,OAAM,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,OAAO;IACtD,KAAA,CAAK,KAAK,GAAG,KAAK;IAAC,OAAA,KAAA;EACvB;EAAC,YAAA,CAAA,cAAA;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,OAAO,MAAc,EAAE,KAAU,EAAA;MAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC;IAC3C;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,OAAO,MAAc,EAAA;MACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;IACpC;EAAC;EAAA,OAAA,cAAA;AAAA,EAd+B,KAAK","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map"]},"metadata":{},"sourceType":"module"}